#pragma once

enum D3D7TEXTURESTAGESTATETYPE
{
	D3D7TSS_COLOROP = 0,
	D3D7TSS_COLORARG1,
	D3D7TSS_COLORARG2,
	D3D7TSS_ALPHAOP,
	D3D7TSS_ALPHAARG1,
	D3D7TSS_ALPHAARG2,
	D3D7TSS_BUMPENVMAT00,
	D3D7TSS_BUMPENVMAT01,
	D3D7TSS_BUMPENVMAT10,
	D3D7TSS_BUMPENVMAT11,
	D3D7TSS_TEXCOORDINDEX,
	D3D7TSS_ADDRESS,
	D3D7TSS_ADDRESSU,
	D3D7TSS_ADDRESSV,
	D3D7TSS_BORDERCOLOR,
	D3D7TSS_MAGFILTER,
	D3D7TSS_MINFILTER,
	D3D7TSS_MIPFILTER,
	D3D7TSS_MIPMAPLODBIAS,
	D3D7TSS_MAXMIPLEVEL,
	D3D7TSS_MAXANISOTROPY,
	D3D7TSS_BUMPENVLSCALE,
	D3D7TSS_BUMPENVLOFFSET,
	D3D7TSS_TEXTURETRANSFORMFLAGS,
	D3D7TSS_COUNT,
};

enum D3D7RENDERSTATETYPE
{
	D3D7RENDERSTATE_ANTIALIAS = 2, /* D3D7ANTIALIASMODE */
	D3D7RENDERSTATE_TEXTUREPERSPECTIVE = 4, /* TRUE for perspective correction */
	D3D7RENDERSTATE_ZENABLE = 7, /* D3D7ZBUFFERTYPE (or TRUE/FALSE for legacy) */
	D3D7RENDERSTATE_FILLMODE = 8, /* D3D7FILL_MODE */
	D3D7RENDERSTATE_SHADEMODE = 9, /* D3D7SHADEMODE */
	D3D7RENDERSTATE_LINEPATTERN = 10, /* D3D7LINEPATTERN */
	D3D7RENDERSTATE_ZWRITEENABLE = 14, /* TRUE to enable z writes */
	D3D7RENDERSTATE_ALPHATESTENABLE = 15, /* TRUE to enable alpha tests */
	D3D7RENDERSTATE_LASTPIXEL = 16, /* TRUE for last-pixel on lines */
	D3D7RENDERSTATE_SRCBLEND = 19, /* D3D7BLEND */
	D3D7RENDERSTATE_DESTBLEND = 20, /* D3D7BLEND */
	D3D7RENDERSTATE_CULLMODE = 22, /* D3D7CULL */
	D3D7RENDERSTATE_ZFUNC = 23, /* D3D7CMPFUNC */
	D3D7RENDERSTATE_ALPHAREF = 24, /* D3D7FIXED */
	D3D7RENDERSTATE_ALPHAFUNC = 25, /* D3D7CMPFUNC */
	D3D7RENDERSTATE_DITHERENABLE = 26, /* TRUE to enable dithering */
#if(DIRECT3D_VERSION >= 0x0500)
	D3D7RENDERSTATE_ALPHABLENDENABLE = 27, /* TRUE to enable alpha blending */
#endif
	D3D7RENDERSTATE_FOGENABLE = 28, /* TRUE to enable fog blending */
	D3D7RENDERSTATE_SPECULARENABLE = 29, /* TRUE to enable specular */
	D3D7RENDERSTATE_ZVISIBLE = 30, /* TRUE to enable z checking */
	D3D7RENDERSTATE_STIPPLEDALPHA = 33, /* TRUE to enable stippled alpha (RGB device only) */
	D3D7RENDERSTATE_FOGCOLOR = 34, /* D3D7COLOR */
	D3D7RENDERSTATE_FOGTABLEMODE = 35, /* D3D7FOGMODE */
#if(DIRECT3D_VERSION >= 0x0700)
	D3D7RENDERSTATE_FOGSTART = 36, /* Fog start (for both vertex and pixel fog) */
	D3D7RENDERSTATE_FOGEND = 37, /* Fog end */
	D3D7RENDERSTATE_FOGDENSITY = 38, /* Fog density */
#endif
#if(DIRECT3D_VERSION >= 0x0500)
	D3D7RENDERSTATE_EDGEANTIALIAS = 40, /* TRUE to enable edge antialiasing */
	D3D7RENDERSTATE_COLORKEYENABLE = 41, /* TRUE to enable source colorkeyed textures */
	D3D7RENDERSTATE_ZBIAS = 47, /* LONG Z bias */
	D3D7RENDERSTATE_RANGEFOGENABLE = 48, /* Enables range-based fog */
#endif
#if(DIRECT3D_VERSION >= 0x0600)
	D3D7RENDERSTATE_STENCILENABLE = 52, /* BOOL enable/disable stenciling */
	D3D7RENDERSTATE_STENCILFAIL = 53, /* D3D7STENCILOP to do if stencil test fails */
	D3D7RENDERSTATE_STENCILZFAIL = 54, /* D3D7STENCILOP to do if stencil test passes and Z test fails */
	D3D7RENDERSTATE_STENCILPASS = 55, /* D3D7STENCILOP to do if both stencil and Z tests pass */
	D3D7RENDERSTATE_STENCILFUNC = 56, /* D3D7CMPFUNC fn. Stencil Test passes if ((ref & mask) stencilfn (stencil & mask)) is true */
	D3D7RENDERSTATE_STENCILREF = 57, /* Reference value used in stencil test */
	D3D7RENDERSTATE_STENCILMASK = 58, /* Mask value used in stencil test */
	D3D7RENDERSTATE_STENCILWRITEMASK = 59, /* Write mask applied to values written to stencil buffer */
	D3D7RENDERSTATE_TEXTUREFACTOR = 60, /* D3D7COLOR used for multi-texture blend */
#endif
#if(DIRECT3D_VERSION >= 0x0700)
	D3D7RENDERSTATE_CLIPPING = 136,
	D3D7RENDERSTATE_LIGHTING = 137,
	D3D7RENDERSTATE_EXTENTS = 138,
	D3D7RENDERSTATE_AMBIENT = 139,
	D3D7RENDERSTATE_FOGVERTEXMODE = 140,
	D3D7RENDERSTATE_COLORVERTEX = 141,
	D3D7RENDERSTATE_LOCALVIEWER = 142,
	D3D7RENDERSTATE_NORMALIZENORMALS = 143,
	D3D7RENDERSTATE_COLORKEYBLENDENABLE = 144,
	D3D7RENDERSTATE_DIFFUSEMATERIALSOURCE = 145,
	D3D7RENDERSTATE_SPECULARMATERIALSOURCE = 146,
	D3D7RENDERSTATE_AMBIENTMATERIALSOURCE = 147,
	D3D7RENDERSTATE_EMISSIVEMATERIALSOURCE = 148,
	D3D7RENDERSTATE_VERTEXBLEND = 151,
	D3D7RENDERSTATE_CLIPPLANEENABLE = 152,
#endif
	D3D7RENDERSTATE_TEXTUREHANDLE = 1, /* Texture handle for legacy interfaces (Texture,Texture2) */
	D3D7RENDERSTATE_TEXTUREADDRESS = 3, /* D3D7TEXTUREADDRESS */
	D3D7RENDERSTATE_WRAPU = 5, /* TRUE for wrapping in u */
	D3D7RENDERSTATE_WRAPV = 6, /* TRUE for wrapping in v */
	D3D7RENDERSTATE_MONOENABLE = 11, /* TRUE to enable mono rasterization */
	D3D7RENDERSTATE_ROP2 = 12, /* ROP2 */
	D3D7RENDERSTATE_PLANEMASK = 13, /* DWORD physical plane mask */
	D3D7RENDERSTATE_TEXTUREMAG = 17, /* D3D7TEXTUREFILTER */
	D3D7RENDERSTATE_TEXTUREMIN = 18, /* D3D7TEXTUREFILTER */
	D3D7RENDERSTATE_TEXTUREMAPBLEND = 21, /* D3D7TEXTUREBLEND */
	D3D7RENDERSTATE_SUBPIXEL = 31, /* TRUE to enable subpixel correction */
	D3D7RENDERSTATE_SUBPIXELX = 32, /* TRUE to enable correction in X only */
	D3D7RENDERSTATE_STIPPLEENABLE = 39, /* TRUE to enable stippling */
#if(DIRECT3D_VERSION >= 0x0500)
	D3D7RENDERSTATE_BORDERCOLOR = 43, /* Border color for texturing w/border */
	D3D7RENDERSTATE_TEXTUREADDRESSU = 44, /* Texture addressing mode for U coordinate */
	D3D7RENDERSTATE_TEXTUREADDRESSV = 45, /* Texture addressing mode for V coordinate */
	D3D7RENDERSTATE_MIPMAPLODBIAS = 46, /* D3D7VALUE Mipmap LOD bias */
	D3D7RENDERSTATE_ANISOTROPY = 49, /* Max. anisotropy. 1 = no anisotropy */
#endif
	D3D7RENDERSTATE_FLUSHBATCH = 50, /* Explicit flush for DP batching (DX5 Only) */
#if(DIRECT3D_VERSION >= 0x0600)
	D3D7RENDERSTATE_TRANSLUCENTSORTINDEPENDENT = 51, /* BOOL enable sort-independent transparency */
#endif
	D3D7RENDERSTATE_FOGTABLESTART = 36, /* Fog table start */
	D3D7RENDERSTATE_FOGTABLEEND = 37, /* Fog table end */
	D3D7RENDERSTATE_FOGTABLEDENSITY = 38, /* Fog table density */
#if(DIRECT3D_VERSION >= 0x0500)
	D3D7RENDERSTATE_FORCE_DWORD = 0x7fffffff, /* force 32-bit size enum */
#endif
};

enum D3D7CMPFUNC
{
	D3D7CMP_NEVER = 1,
	D3D7CMP_LESS = 2,
	D3D7CMP_EQUAL = 3,
	D3D7CMP_LESSEQUAL = 4,
	D3D7CMP_GREATER = 5,
	D3D7CMP_NOTEQUAL = 6,
	D3D7CMP_GREATEREQUAL = 7,
	D3D7CMP_ALWAYS = 8,
#if(DIRECT3D_VERSION >= 0x0500)
	D3D7CMP_FORCE_DWORD = 0x7fffffff, /* force 32-bit size enum */
#endif
};

enum D3D7BLEND
{
	D3D7BLEND_ZERO = 1,
	D3D7BLEND_ONE = 2,
	D3D7BLEND_SRCCOLOR = 3,
	D3D7BLEND_INVSRCCOLOR = 4,
	D3D7BLEND_SRCALPHA = 5,
	D3D7BLEND_INVSRCALPHA = 6,
	D3D7BLEND_DESTALPHA = 7,
	D3D7BLEND_INVDESTALPHA = 8,
	D3D7BLEND_DESTCOLOR = 9,
	D3D7BLEND_INVDESTCOLOR = 10,
	D3D7BLEND_SRCALPHASAT = 11,
	D3D7BLEND_BOTHSRCALPHA = 12,
	D3D7BLEND_BOTHINVSRCALPHA = 13,
#if(DIRECT3D_VERSION >= 0x0500)
	D3D7BLEND_FORCE_DWORD = 0x7fffffff, /* force 32-bit size enum */
#endif
};

enum D3D7TEXTUREOP
{
	D3D7TOP_DISABLE = 1, // disables stage
	D3D7TOP_SELECTARG1 = 2, // the default
	D3D7TOP_SELECTARG2 = 3,
	D3D7TOP_MODULATE = 4, // multiply args together
	D3D7TOP_MODULATE2X = 5, // multiply and 1 bit
	D3D7TOP_MODULATE4X = 6, // multiply and 2 bits
	D3D7TOP_ADD = 7, // add arguments together
	D3D7TOP_ADDSIGNED = 8, // add with -0.5 bias
	D3D7TOP_ADDSIGNED2X = 9, // as above but left 1 bit
	D3D7TOP_SUBTRACT = 10, // Arg1 - Arg2, with no saturation
	D3D7TOP_ADDSMOOTH = 11, // add 2 args, subtract product
	D3D7TOP_BLENDDIFFUSEALPHA = 12, // iterated alpha
	D3D7TOP_BLENDTEXTUREALPHA = 13, // texture alpha
	D3D7TOP_BLENDFACTORALPHA = 14, // alpha from D3D7RENDERSTATE_TEXTUREFACTOR
	D3D7TOP_BLENDTEXTUREALPHAPM = 15, // texture alpha
	D3D7TOP_BLENDCURRENTALPHA = 16, // by alpha of current color
	D3D7TOP_PREMODULATE = 17, // modulate with next texture before use
	D3D7TOP_MODULATEALPHA_ADDCOLOR = 18, // Arg1.RGB + Arg1.A*Arg2.RGB
	D3D7TOP_MODULATECOLOR_ADDALPHA = 19, // Arg1.RGB*Arg2.RGB + Arg1.A
	D3D7TOP_MODULATEINVALPHA_ADDCOLOR = 20, // (1-Arg1.A)*Arg2.RGB + Arg1.RGB
	D3D7TOP_MODULATEINVCOLOR_ADDALPHA = 21, // (1-Arg1.RGB)*Arg2.RGB + Arg1.A
	D3D7TOP_BUMPENVMAP = 22, // per pixel env map perturbation
	D3D7TOP_BUMPENVMAPLUMINANCE = 23, // with luminance channel
	D3D7TOP_DOTPRODUCT3 = 24,
	D3D7TOP_FORCE_DWORD = 0x7fffffff,
};

enum D3D7ANTIALIASMODE
{
	D3D7ANTIALIAS_NONE = 0,
	D3D7ANTIALIAS_SORTDEPENDENT = 1,
	D3D7ANTIALIAS_SORTINDEPENDENT = 2,
	D3D7ANTIALIAS_FORCE_DWORD = 0x7fffffff,
};

enum D3D7TEXTUREMAGFILTER
{
	D3D7TFG_POINT = 1, // nearest
	D3D7TFG_LINEAR = 2, // linear interpolation
	D3D7TFG_FLATCUBIC = 3, // cubic
	D3D7TFG_GAUSSIANCUBIC = 4, // different cubic kernel
	D3D7TFG_ANISOTROPIC = 5, //
	D3D7TFG_FORCE_DWORD = 0x7fffffff, // force 32-bit size enum
};

enum D3D7TEXTUREMINFILTER
{
	D3D7TFN_POINT = 1, // nearest
	D3D7TFN_LINEAR = 2, // linear interpolation
	D3D7TFN_ANISOTROPIC = 3, //
	D3D7TFN_FORCE_DWORD = 0x7fffffff, // force 32-bit size enum
};

#define D3D7TA_SELECTMASK 0x0000000f // mask for arg selector
#define D3D7TA_DIFFUSE 0x00000000 // select diffuse color
#define D3D7TA_CURRENT 0x00000001 // select result of previous stage
#define D3D7TA_TEXTURE 0x00000002 // select texture color
#define D3D7TA_TFACTOR 0x00000003 // select RENDERSTATE_TEXTUREFACTOR
#if(DIRECT3D_VERSION >= 0x0700)
#define D3D7TA_SPECULAR 0x00000004 // select specular color
#endif
#define D3D7TA_COMPLEMENT 0x00000010 // take 1.0 - x
#define D3D7TA_ALPHAREPLICATE 0x00000020 // replicate alpha to color components